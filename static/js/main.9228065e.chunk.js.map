{"version":3,"sources":["Components/VarBox.js","Components/DropPanel.js","Components/List.js","Components/Operators.js","Components/Results.js","Components/FormatIndex.js","App.js","index.js"],"names":["VarBox","dropBox","index","value","dragDisable","getIntegerModal","removeQuery","crossBtn","integerModal","submitInteger","integerValueRef","useRef","operators","useState","crossDisplay","setCrossDisplay","spanClass","innerSpan","includes","indexOf","useEffect","handleClose","isDragDisabled","draggableId","toString","provided","onClick","className","style","display","draggableProps","dragHandleProps","ref","innerRef","Modal","show","onHide","Header","Title","Body","for","type","id","placeholder","Footer","Button","variant","current","DropPanel","props","getBoxes","item","droppableId","direction","droppableProps","query","map","List","variables","Operators","isDropDisabled","snapshot","Results","variableName","class","scope","FormatIndex","App","setVariables","setQuery","setCrossBtn","setIntegerModal","integerValue","setIntegerValue","queryStatus","setQueryStatus","currentQuery","parseInt","handleDrag","result","source","destination","currentVariables","length","splice","onDragEnd","onDragStart","start","status","valid","first","match","second","third","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9228065e.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport const VarBox = ({\r\n  dropBox,\r\n  index,\r\n  value,\r\n  dragDisable,\r\n  getIntegerModal,\r\n  removeQuery,\r\n  crossBtn,\r\n  integerModal,\r\n  submitInteger,\r\n}) => {\r\n  const integerValueRef = useRef();\r\n  const operators = [\"<\", \">\", \"Int\"];\r\n  const spanValue = [\">\", \"<\", \"Input\"];\r\n  const [crossDisplay, setCrossDisplay] = useState(\"none\");\r\n  // const [integerModal, setIntegerModal] = useState(false);\r\n  let spanClass = \"\";\r\n  let innerSpan = \"\";\r\n  let intBox = false;\r\n  if (typeof value == \"number\") {\r\n    intBox = true;\r\n  }\r\n  if (operators.includes(value)) {\r\n    innerSpan = operators.indexOf(value);\r\n    innerSpan = spanValue[innerSpan];\r\n    if (value == \"Int\") {\r\n      spanClass = \"integer--button btn btn-success\";\r\n    } else {\r\n      spanClass = \"operation--button btn\";\r\n    }\r\n  } else {\r\n    spanClass = \"varBox--button btn\";\r\n  }\r\n  if (typeof value == \"number\") {\r\n    spanClass = \"integer--button btn btn-success\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dragDisable) {\r\n      setCrossDisplay(\"inline-block\");\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    getIntegerModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      {/* <div>{dropBox}</div> */}\r\n      <Draggable\r\n        isDragDisabled={dragDisable}\r\n        key={dropBox + index.toString()}\r\n        draggableId={dropBox + index.toString()}\r\n        index={index}\r\n        // id={index.toString()}\r\n      >\r\n        {(provided) => (\r\n          <div>\r\n            {crossBtn && (\r\n              <CancelIcon\r\n                onClick={() => {\r\n                  removeQuery(index);\r\n                }}\r\n                className=\"cross-btn\"\r\n                style={{ display: `${crossDisplay}` }}\r\n              />\r\n            )}\r\n            <span\r\n              // key={index.toString()}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              className={spanClass}\r\n              onClick={\r\n                spanClass == \"integer--button btn btn-success\"\r\n                  ? () => {\r\n                      getIntegerModal(true);\r\n                    }\r\n                  : () => {}\r\n              }\r\n            >\r\n              {innerSpan || value}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n      <Modal show={integerModal} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>Integer Input</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"form-group\">\r\n            <label for=\"integer-input\">Enter Integer</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"integer-input\"\r\n              aria-describedby=\"number\"\r\n              placeholder=\"Enter Integer\"\r\n              ref={integerValueRef}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              submitInteger(integerValueRef.current.value);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { VarBox } from \"./VarBox\";\r\n\r\nexport const DropPanel = (props) => {\r\n  const getBoxes = (item, index) => {\r\n    return (\r\n      <VarBox\r\n        dropBox={\"destination\"}\r\n        dragDisable={true}\r\n        key={index}\r\n        value={item}\r\n        index={index}\r\n        getIntegerModal={props.getIntegerModal}\r\n        removeQuery={props.removeQuery}\r\n        crossBtn={props.crossBtn}\r\n        integerModal={props.integerModal}\r\n        submitInteger={props.submitInteger}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Droppable droppableId=\"destination\" direction=\"horizontal\">\r\n        {(provided) => (\r\n          <div\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            className=\"drop-panel--container\"\r\n          >\r\n            {props.query.map(getBoxes)}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { VarBox } from \"./VarBox\";\r\n\r\nexport const List = (props) => {\r\n  const getBoxes = (item, index) => {\r\n    return (\r\n      <VarBox\r\n        dragDisable={false}\r\n        dropBox={\"source\"}\r\n        key={index}\r\n        value={item}\r\n        index={index}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    // <DragDropContext onDragEnd={props.handleDrag}>\r\n    <Droppable droppableId=\"source\" direction=\"horizontal\">\r\n      {(provided) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className=\"varBox--container\"\r\n        >\r\n          {props.variables.map(getBoxes)}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n    // </DragDropContext>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport const Operators = () => {\r\n  return (\r\n    <Droppable\r\n      droppableId=\"operator\"\r\n      direction={\"vertical\"}\r\n      isDropDisabled={true}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <div\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          className=\"operator--container\"\r\n        >\r\n          {/* <div className=\"operation--container\"> */}\r\n          <Draggable\r\n            key={\"operator-gt\"}\r\n            draggableId={\"operator-gt\"}\r\n            index={300}\r\n          >\r\n            {(provided) => (\r\n              <div\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                className=\"operation--button btn\"\r\n              >\r\n                &gt;\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n          <Draggable\r\n            key={\"operator-lt\"}\r\n            draggableId={\"operator-lt\"}\r\n            index={301}\r\n          >\r\n            {(provided) => (\r\n              <div\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                className=\"operation--button btn\"\r\n              >\r\n                &lt;\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n          {/* </div> */}\r\n          <hr className=\"w-75\" />\r\n          <Draggable\r\n            key={\"operator-int\"}\r\n            draggableId={\"operator-int\"}\r\n            index={302}\r\n          >\r\n            {(provided) => (\r\n              <div\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                className=\"integer--button btn btn-success\"\r\n              >\r\n                Integer\r\n              </div>\r\n            )}\r\n          </Draggable>\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Results = () => {\r\n  const variableName = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n  const getTableBody = (item, index) => {\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td scope=\"row\">{item}</td>\r\n          <td>&lt;</td>\r\n          <td>67</td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"results--container\">\r\n      <div className=\"result-heading\">MATCHED RESULT</div>\r\n      <hr className=\"result-hr\" />\r\n      <table class=\"table\">\r\n        <thead class=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Variable</th>\r\n            <th scope=\"col\">Operator</th>\r\n            <th scope=\"col\">Integer</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {variableName ? <>{variableName.map(getTableBody)}</> : <></>}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const FormatIndex = () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <div className=\"correct-format\">Correct Format :- </div>\r\n        <div className=\"d-flex\">\r\n          <div className=\"index-source\"></div>\r\n          <div className=\"index-operator\"></div>\r\n          <div className=\"index-int\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DropPanel } from \"./Components/DropPanel\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { List } from \"./Components/List\";\r\nimport { Operators } from \"./Components/Operators\";\r\nimport { Results } from \"./Components/Results\";\r\nimport \"./styles/custom.css\";\r\nimport { FormatIndex } from \"./Components/FormatIndex\";\r\nimport { Button } from \"react-bootstrap\";\r\nexport const App = () => {\r\n  const [variables, setVariables] = useState([\r\n    \"Kusum\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"Jai\",\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"K\",\r\n    \"K\",\r\n  ]);\r\n  const [query, setQuery] = useState([]);\r\n  const [operation, setOperation] = useState();\r\n  const [crossBtn, setCrossBtn] = useState(true);\r\n  const [integerModal, setIntegerModal] = useState(false);\r\n  const [integerValue, setIntegerValue] = useState();\r\n  const [queryStatus, setQueryStatus] = useState(false);\r\n  useEffect(() => {\r\n    const currentQuery = query;\r\n    const index = currentQuery.indexOf(\"Int\");\r\n    currentQuery[index] = parseInt(integerValue);\r\n    setQuery([...currentQuery]);\r\n  }, [integerValue]);\r\n  const handleDragStart = (start) => {\r\n    setCrossBtn(false);\r\n  };\r\n  const handleDrag = (result) => {\r\n    setCrossBtn(true);\r\n    const { source, destination } = result;\r\n    if (!source || !destination) {\r\n      return;\r\n    }\r\n    if (destination.droppableId == \"operator\") {\r\n      return;\r\n    }\r\n    let currentVariables = variables;\r\n    let currentQuery = query;\r\n    if (currentQuery.length >= 3) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId == \"source\" && destination.droppableId == \"source\") {\r\n      const item = currentVariables.splice(source.index, 1);\r\n      currentVariables.splice(destination.index, 0, item);\r\n    }\r\n    if (\r\n      source.droppableId == \"source\" &&\r\n      destination.droppableId == \"destination\"\r\n    ) {\r\n      const item = currentVariables.splice(source.index, 1);\r\n      currentQuery.splice(destination.index, 0, item[0]);\r\n    }\r\n    if (\r\n      source.droppableId == \"destination\" &&\r\n      destination.droppableId == \"source\"\r\n    ) {\r\n      const item = currentQuery.splice(source.index, 1);\r\n      currentVariables.splice(destination.index, 0, item);\r\n    }\r\n    if (\r\n      source.droppableId == \"operator\" &&\r\n      destination.droppableId == \"source\"\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      source.droppableId == \"operator\" &&\r\n      destination.droppableId == \"destination\"\r\n    ) {\r\n      let item = source.index;\r\n      if (item == 300) {\r\n        item = \"<\";\r\n      } else if (item == 301) {\r\n        item = \">\";\r\n      } else {\r\n        item = \"Int\";\r\n      }\r\n      currentQuery.splice(destination.index, 0, item);\r\n    }\r\n    setQuery(currentQuery);\r\n    setVariables(currentVariables);\r\n  };\r\n  const handleIntegerModal = (status) => {\r\n    setIntegerModal(status);\r\n  };\r\n  const handleRemoveQuery = (index) => {\r\n    const currentQuery = query;\r\n    currentQuery.splice(index, 1);\r\n    setQuery([...currentQuery]);\r\n  };\r\n  const handleSubmitInteger = (value) => {\r\n    setIntegerValue(value);\r\n  };\r\n  const verifyQuery = () => {\r\n    const currentQuery = query;\r\n    let valid = true;\r\n    if (currentQuery.length != 3) {\r\n      valid = false;\r\n    } else {\r\n      let first =\r\n        typeof currentQuery[0] != \"number\" && !currentQuery[0].match(/[<>]/);\r\n      let second =\r\n        typeof currentQuery[1] != \"number\" && currentQuery[1].match(/[<>]/);\r\n      let third = typeof currentQuery[2] == \"number\";\r\n      let forth = typeof currentQuery[0] == \"number\";\r\n      let fifth =\r\n        typeof currentQuery[1] != \"number\" && currentQuery[1].match(/[<>]/);\r\n      let sixth =\r\n        typeof currentQuery[2] != \"number\" && !currentQuery[2].match(/[<>]/);\r\n      console.log(first, second, third);\r\n      if (first && second && third) {\r\n        valid = true;\r\n      } else {\r\n        valid = false;\r\n      }\r\n    }\r\n    setQueryStatus(valid);\r\n    console.log(\"valid -> \", valid);\r\n  };\r\n  return (\r\n    <>\r\n      <DragDropContext onDragEnd={handleDrag} onDragStart={handleDragStart}>\r\n        {/* <Droppable droppableId=\"index\"> */}\r\n        {/* {(provided) => ( */}\r\n        <>\r\n          <List\r\n            // innerRef={provided.innerRef}\r\n            // {...provided.droppableProps}\r\n            variables={variables}\r\n            handleDrag={handleDrag}\r\n          />\r\n          <div className=\"drag-panel d-flex\">\r\n            <Operators className=\"operators\" />\r\n\r\n            <div className=\"w-100\">\r\n              <div className=\"drop-heading text-center\">DROP PANEL</div>\r\n              <hr className=\"m-0\" />\r\n              <FormatIndex />\r\n              <DropPanel\r\n                className=\"drop-section\"\r\n                query={query}\r\n                getIntegerModal={handleIntegerModal}\r\n                removeQuery={handleRemoveQuery}\r\n                crossBtn={crossBtn}\r\n                integerModal={integerModal}\r\n                submitInteger={handleSubmitInteger}\r\n              />\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div\r\n                  className=\"btn btn-primary w-50 mt-3\"\r\n                  onClick={verifyQuery}\r\n                >\r\n                  SUBMIT\r\n                </div>\r\n              </div>\r\n              <div>{queryStatus ? \"valid\" : \"invalid\"}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"drop-panel d-flex justify-content-center\">\r\n            <Results />\r\n          </div>\r\n        </>\r\n        {/* )} */}\r\n        {/* </Droppable> */}\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}